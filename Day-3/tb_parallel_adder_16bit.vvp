#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0117D210 .scope module, "tb_parallel_adder_16bit" "tb_parallel_adder_16bit" 2 2;
 .timescale 0 0;
v011B0FA8_0 .var/i "fail_count", 31 0;
v011B1000_0 .var/i "i", 31 0;
v011B1318_0 .var "pass", 0 0;
v011B1058_0 .var/i "pass_count", 31 0;
v011B11B8_0 .var "tb_a", 15 0;
v011B1478_0 .var "tb_b", 15 0;
v011B1210_0 .var "tb_cin", 0 0;
v011B1370_0 .net "tb_cout", 0 0, L_011B1580; 1 drivers
v011B14D0_0 .net "tb_sum", 15 0, L_011B15D8; 1 drivers
S_0117CE58 .scope task, "verify" "verify" 2 24, 2 24, S_0117D210;
 .timescale 0 0;
v011B13C8_0 .var "a", 15 0;
v011B1420_0 .var "b", 15 0;
v011B1528_0 .var "cin", 0 0;
v011B12C0_0 .var "expected_result", 16 0;
v011B1160_0 .var "pass", 0 0;
TD_tb_parallel_adder_16bit.verify ;
    %load/v 8, v011B13C8_0, 16;
    %set/v v011B11B8_0, 8, 16;
    %load/v 8, v011B1420_0, 16;
    %set/v v011B1478_0, 8, 16;
    %load/v 8, v011B1528_0, 1;
    %set/v v011B1210_0, 8, 1;
    %delay 10, 0;
    %load/v 8, v011B13C8_0, 16;
    %mov 24, 0, 1;
    %load/v 25, v011B1420_0, 16;
    %mov 41, 0, 1;
    %add 8, 25, 17;
    %load/v 25, v011B1528_0, 1;
    %mov 26, 0, 16;
    %add 8, 25, 17;
    %set/v v011B12C0_0, 8, 17;
    %load/v 8, v011B14D0_0, 16;
    %load/v 24, v011B1370_0, 1;
    %load/v 25, v011B12C0_0, 17;
    %cmp/u 8, 25, 17;
    %jmp/0xz  T_0.0, 4;
    %vpi_call 2 37 "$display", "PASS: a=%h, b=%h, cin=%b => sum=%h, cout=%b (expected: sum=%h, cout=%b)", v011B13C8_0, v011B1420_0, v011B1528_0, v011B14D0_0, v011B1370_0, &PV<v011B12C0_0, 0, 16>, &PV<v011B12C0_0, 16, 1>;
    %set/v v011B1160_0, 1, 1;
    %jmp T_0.1;
T_0.0 ;
    %vpi_call 2 41 "$display", "FAIL: a=%h, b=%h, cin=%b => sum=%h, cout=%b (expected: sum=%h, cout=%b)", v011B13C8_0, v011B1420_0, v011B1528_0, v011B14D0_0, v011B1370_0, &PV<v011B12C0_0, 0, 16>, &PV<v011B12C0_0, 16, 1>;
    %set/v v011B1160_0, 0, 1;
T_0.1 ;
    %end;
S_0117CD48 .scope module, "dut" "parallel_adder_16bit" 2 16, 3 1, S_0117D210;
 .timescale 0 0;
v01179468_0 .net *"_s10", 0 0, C4<0>; 1 drivers
v01179348_0 .net *"_s11", 16 0, L_011D7128; 1 drivers
v0117AF30_0 .net *"_s13", 16 0, L_011D73E8; 1 drivers
v0117AF88_0 .net *"_s16", 15 0, C4<0000000000000000>; 1 drivers
v01173BA8_0 .net *"_s17", 16 0, L_011D72E0; 1 drivers
v01173C00_0 .net *"_s3", 16 0, L_011D7230; 1 drivers
v01173C58_0 .net *"_s6", 0 0, C4<0>; 1 drivers
v011B0EF8_0 .net *"_s7", 16 0, L_011D74F0; 1 drivers
v011B0F50_0 .net "a", 15 0, v011B11B8_0; 1 drivers
v011B1268_0 .net "b", 15 0, v011B1478_0; 1 drivers
v011B1630_0 .net "cin", 0 0, v011B1210_0; 1 drivers
v011B1108_0 .alias "cout", 0 0, v011B1370_0;
v011B10B0_0 .alias "sum", 15 0, v011B14D0_0;
L_011B1580 .part L_011D72E0, 16, 1;
L_011B15D8 .part L_011D72E0, 0, 16;
L_011D7230 .concat [ 16 1 0 0], v011B11B8_0, C4<0>;
L_011D74F0 .concat [ 16 1 0 0], v011B1478_0, C4<0>;
L_011D7128 .arith/sum 17, L_011D7230, L_011D74F0;
L_011D73E8 .concat [ 1 16 0 0], v011B1210_0, C4<0000000000000000>;
L_011D72E0 .arith/sum 17, L_011D7128, L_011D73E8;
    .scope S_0117D210;
T_1 ;
    %set/v v011B1058_0, 0, 32;
    %end;
    .thread T_1;
    .scope S_0117D210;
T_2 ;
    %set/v v011B0FA8_0, 0, 32;
    %end;
    .thread T_2;
    .scope S_0117D210;
T_3 ;
    %vpi_call 2 49 "$dumpfile", "tb_parallel_adder_16bit.vcd";
    %vpi_call 2 50 "$dumpvars";
    %end;
    .thread T_3;
    .scope S_0117D210;
T_4 ;
    %vpi_call 2 54 "$display", "Starting Testbench for 16-bit Parallel Adder\012";
    %set/v v011B1000_0, 0, 32;
T_4.0 ;
    %load/v 8, v011B1000_0, 32;
   %cmpi/s 8, 30, 32;
    %jmp/0xz T_4.1, 5;
    %vpi_func 2 58 "$random", 8, 32;
    %set/v v011B13C8_0, 8, 16;
    %vpi_func 2 58 "$random", 8, 32;
    %set/v v011B1420_0, 8, 16;
    %vpi_func 2 58 "$random", 8, 32;
    %movi 40, 2, 32;
    %mod/s 8, 40, 32;
    %set/v v011B1528_0, 8, 1;
    %fork TD_tb_parallel_adder_16bit.verify, S_0117CE58;
    %join;
    %load/v 8, v011B1160_0, 1;
    %set/v v011B1318_0, 8, 1;
    %load/v 8, v011B1318_0, 1;
    %jmp/0xz  T_4.2, 8;
    %load/v 8, v011B1058_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v011B1058_0, 8, 32;
    %jmp T_4.3;
T_4.2 ;
    %load/v 8, v011B0FA8_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v011B0FA8_0, 8, 32;
T_4.3 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v011B1000_0, 32;
    %set/v v011B1000_0, 8, 32;
    %jmp T_4.0;
T_4.1 ;
    %vpi_call 2 63 "$display", "\012Testbench completed";
    %vpi_call 2 64 "$display", "Total Passed: %d", v011B1058_0;
    %vpi_call 2 65 "$display", "Total Failed: %d", v011B0FA8_0;
    %vpi_call 2 66 "$finish";
    %end;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb_parallel_adder_16bit.v";
    "parallel_adder_16bit.v";
